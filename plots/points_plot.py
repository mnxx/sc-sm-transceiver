# Copyright 2017 Communications Engineering Lab - KIT.
# All Rights Reserved.
# Author: Manuel Roth.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the GNU General Public License v3.0 is distributed on an "AS IS"
# BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Create BER/SNR plots using a list of calculated points.

"""


import numpy as np
import matplotlib.pyplot as plt


# Testing the 2x1 transmission scheme.
# 10 dB CE error:
#points2x1_2_ce = [0.32937125, 0.27197375, 0.2212925, 0.17606125, 0.141915, 0.1179575, 0.102585, 0.093465, 0.08688625, 0.08168625, 0.08045125]
# 20 dB CE error:
points2x1_2_ce = [7.75e-05, 5.625e-05, 9e-05, 8.125e-05, 8.25e-05, 9.125e-05, 9.125e-05, 7.25e-05, 5.5e-05, 8.75e-05, 4.625e-05] #[0.00012875, 7.75e-05, 0.00013375, 8e-05, 0.0001225, 0.000105, 0.00010375, 0.00013375, 8.875e-05, 8.75e-05, 0.0001175] #[0.000145, 0.00017625, 0.00019125, 0.00021, 0.00015625, 0.0001625, 0.0001825, 0.00018375, 0.00020375, 0.0001875, 0.0001575]
#[0.0020625, 0.00135, 0.0017375, 0.002075, 0.00165, 0.001575, 0.00185, 0.0017625, 0.0020625, 0.00195, 0.0013375]
#[0.29092, 0.219445, 0.1516325, 0.09639375, 0.05667875, 0.031735, 0.01760875, 0.01035, 0.0063575, 0.00438875, 0.00313375]
points2x1_2 = [0.28773625, 0.21225625, 0.14205375, 0.08651625, 0.04656, 0.0232975, 0.01064, 0.00462625, 0.00199, 0.0008125, 0.00031625]
points2x1_4 = [0.20399875, 0.12980875, 0.06934875, 0.03154375, 0.01171875, 0.004145, 0.0011425, 0.00035, 0.000105, 3.5e-05, 1e-05]
new_points2x1_2 = [0.22123, 0.1628425, 0.1103525, 0.06604375, 0.03643375, 0.01784625, 0.00793625, 0.00333625, 0.00137875, 0.00055625, 0.00026625]
 #[0.2568275, 0.18214, 0.17015375, 0.06604375, 0.0023025, 0.28918875, 0.0, 0.00033, 0.0, 0.0, 0.0]
new_points2x1_4 = [0.15721, 0.099085, 0.05289375, 0.02367625, 0.0092025, 0.00295875, 0.0009925, 0.000245, 6.875e-05, 1.5e-05, 1.25e-06]
 #[0.23954625, 0.19061125, 0.03455375, 0.00547375, 0.00146125, 1.625e-05, 7.5e-06, 0.0, 0.0, 0.0, 0.0]
new_points2x1_2_1024 = [0.27568359375, 0.2153564453125, 0.1803955078125, 0.1169140625, 0.082099609375, 0.0288232421875, 0.017353515625, 0.0084326171875, 0.0003857421875, 0.00232421875, 0.0]
#[0.3652392578125, 0.173447265625, 0.0922119140625, 0.2820947265625, 0.1181005859375, 0.020146484375, 0.01064453125, 0.0012158203125, 0.0018212890625, 0.000302734375, 0.0]
new_points2x1_4_1024 = [0.2299169921875, 0.151904296875, 0.0909423828125, 0.0441748046875, 0.0248291015625, 0.0100390625, 0.001103515625, 0.0014453125, 0.0003173828125, 0.0, 0.0]
#[0.2269921875, 0.0790185546875, 0.12890625, 0.014765625, 0.0005322265625, 0.00548828125, 0.0028076171875, 0.0, 0.0, 0.0, 0.0]

# Testing the 2x2 transmission scheme.
# 16 dB CE SNR.
#points2x2_2_ce = [0.0001, 0.00015, 0.00015, 0.0001375, 7.5e-05, 7.5e-05, 0.0001, 0.000225, 8.75e-05, 7.5e-05, 0.00015]
# 17 dB CE SNR.
points2x2_2_ce = [0.00015, 5e-05, 2.5e-05, 2.5e-05, 0.000125, 0.000125, 7.5e-05, 2.5e-05, 0.0, 0.0001125, 2.5e-05]

points2x2_2 = [0.111095, 0.05419375, 0.02167125, 0.00706625, 0.001975, 0.0004925, 8.25e-05, 7.5e-06, 0.0, 0.0, 0.0]
#[0.2244675, 0.108935, 0.0427425, 0.013775, 0.003555, 0.0007975, 0.00019, 3.95e-05, 7e-06, 0.0, 0.0]
gp_2 = [0.14705875, 0.07981875, 0.0358475, 0.012775, 0.00368875, 0.001025, 0.00027625, 3.5e-05, 1e-05, 0.0, 0.0]
new_points2x2_2 = [0.08450875, 0.0411925, 0.016315, 0.0055075, 0.001335, 0.00024, 3.75e-05, 8.75e-06, 0.0, 0.0, 0.0]
 #[0.175355, 0.11234, 0.060655, 0.0267775, 0.00961125, 0.00284625, 0.000705, 0.0001225, 3.375e-05, 1.25e-06, 2.5e-06] #[0.13883125, 0.091275, 0.06095375, 0.00134, 0.00794875, 0.0002325, 3.75e-06, 7.875e-05, 0.0, 0.0, 0.0] #[0.18082375, 0.01376125, 0.08414, 0.01395125, 0.01123125, 2.125e-05, 0.0, 0.0, 0.0, 0.0, 0.0]
new_points2x2_2_1024 = [0.1299658203125, 0.0726220703125, 0.0325244140625, 0.011416015625, 0.0028173828125, 0.0006396484375, 0.0, 0.0, 0.0, 0.0, 0.0]
#[0.216650390625, 0.08546875, 0.080927734375, 0.108447265625, 0.0052197265625, 0.0, 0.0010302734375, 0.0, 0.0, 0.0, 0.0] #[0.1958544921875, 0.1413330078125, 0.136201171875, 0.177373046875, 0.004853515625, 0.0014404296875, 6.8359375e-05, 0.0051513671875, 4.39453125e-05, 0.0, 0.0]

points2x2_4 = [0.0503625, 0.0167825, 0.00410625, 0.00059375, 9.125e-05, 2.5e-06, 2.5e-06, 0.0, 0.0, 0.0, 0.0]
#[0.10201, 0.0341025, 0.00795, 0.0014675, 0.0002125, 1.3e-05, 0.0, 0.0, 0.0, 0.0, 0.0]
gp_4 = [0.0788675, 0.0303975, 0.00855875, 0.00169375, 0.00024375, 4e-05, 5e-06, 0.0, 0.0, 0.0, 0.0]
#new_points2x2_4 = [0.00991375, 0.0066175, 0.00043125, 5e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] # No -3dB/ra
new_points2x2_4 = [0.03841125, 0.01292, 0.00292625, 0.000505, 7e-05, 3.75e-06, 0.0, 0.0, 0.0, 0.0, 0.0]
 #[0.11534125, 0.059455, 0.0227725, 0.00637625, 0.00140125, 0.0002275, 1.75e-05, 5e-06, 0.0, 0.0, 0.0] #[0.25319, 0.08566875, 0.00488875, 0.000685, 2.75e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] #[0.07915, 0.030805, 0.011405, 0.000162125, 2.5e-06, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0]
new_points2x2_4_1024 = [0.0672216796875, 0.0288916015625, 0.00443359375, 0.0014208984375, 8.7890625e-05, 2.44140625e-05, 0.0, 0.0, 0.0, 0.0, 0.0]
#[0.1198388671875, 0.17244140625, 0.1124560546875, 0.0027197265625, 0.0070166015625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
# BER is measured for the following SNRs.
steps = np.arange(0, 22, 2)

# Plot the results in a BER over SNR plot.
plt.figure(1)

plt.subplot(121)
plt.title('MIMO-setup: 2x1')
plt.plot(steps, points2x1_2, 'r-<', label='LSS, M=2')
plt.plot(steps, new_points2x1_2, 'm-<', label='LSS, M=2')
plt.plot(steps, points2x1_4, 'b-o', label='LSS, M=4')
plt.plot(steps, new_points2x1_4, 'c-o', label='LSS, M=4')
plt.plot(steps, new_points2x1_2_1024 , 'k-<', label='LSS, M=2')
plt.plot(steps, new_points2x1_4_1024 , 'k-o', label='LSS, M=4')
plt.axis([0, 20, 0.00001, 1])
plt.xlabel('SNR / dB')
plt.ylabel('BER')
plt.yscale('log')
plt.legend()

plt.subplot(122)
plt.title('MIMO-setup: 2x2')
plt.plot(steps, gp_2, 'k-')
#plt.plot(steps, points2x2_2, 'r-<', label='LSS, M=2')
plt.plot(steps, new_points2x2_2, 'm-<', label='LSS, M=2, M=2')
plt.plot(steps, gp_4, 'g-')
#plt.plot(steps, points2x2_4, 'b-o', label='LSS, M=4')
plt.plot(steps, new_points2x2_4, 'c-o', label='LSS, M=4')
plt.plot(steps, new_points2x2_2_1024 , 'k-<', label='LSS, M=2')
plt.plot(steps, new_points2x2_4_1024 , 'k-o', label='LSS, M=4')
plt.axis([0, 20, 0.00001, 1])
plt.xlabel('SNR / dB')
plt.yscale('log')
plt.legend()

plt.show()

#from matplotlib2tikz import save as tikz_save
#tikz_save('../master-thesis/figures/points_plot.tex', figureheight='7cm', figurewidth='7cm');
