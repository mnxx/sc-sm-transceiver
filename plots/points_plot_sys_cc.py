# Copyright 2017 Communications Engineering Lab - KIT.
# All Rights Reserved.
# Author: Manuel Roth.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the GNU General Public License v3.0 is distributed on an "AS IS"
# BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Create BER/SNR plots using a list of calculated points.

"""


import numpy as np
import matplotlib.pyplot as plt

# Flat-fading:
#flat2x2_1024_2 = [0.446484375, 0.3939453125, 0.385888671875, 0.33056640625, 0.2677734375, 0.32841796875, 0.0755859375, 0.04951171875, 0.039892578125, 0.0404296875, 0.0474609375]

flat2x2_1024_4 = [0.490515625, 0.480546875, 0.44828125, 0.4129296875, 0.350921875, 0.299640625, 0.2318671875, 0.167890625, 0.09975, 0.077734375, 0.0531171875, 0.022859375, 0.0361015625, 0.018515625, 0.01715625, 0.007921875, 0.003734375, 0.0061875, 0.005375, 0.0001875, 8.59375e-05]

#[0.4364404296875, 0.420615234375, 0.391162109375, 0.355322265625, 0.3308740234375, 0.3052392578125, 0.2096923828125, 0.093466796875, 0.0644384765625, 0.0505615234375, 0.032080078125, 0.00904296875, 0.0064013671875, 0.020595703125, 0.000947265625, 0.032783203125, 0.0002197265625, 0.0011962890625, 0.0, 0.00494140625, 0.0] #[0.425341796875, 0.43642578125, 0.4, 0.342138671875, 0.339208984375, 0.235791015625, 0.198046875, 0.17451171875, 0.098828125, 0.05908203125, 0.04111328125, 0.015380859375, 0.0171875, 0.0056640625, 0.003759765625, 0.05]

unifrom2x2_1024_4 = [0.497109375, 0.4818515625, 0.470609375, 0.42990625, 0.3957109375, 0.3831953125, 0.3209140625, 0.2970859375, 0.251578125, 0.245125, 0.23525, 0.2382578125, 0.2022734375, 0.20303125, 0.206875, 0.2019453125, 0.1709765625, 0.1925078125, 0.1959140625, 0.2235859375, 0.2107734375]

#[0.4420166015625, 0.4194140625, 0.3810107421875, 0.351337890625, 0.25693359375, 0.1837646484375, 0.16828125, 0.1809912109375, 0.10703125, 0.042353515625, 0.0272802734375, 0.0025244140625, 0.0020458984375, 0.0337451171875, 0.024296875, 0.053828125, 0.0206787109375, 0.0482470703125, 0.034375, 0.046171875, 0.020859375] #[0.447119140625, 0.41669921875, 0.3720703125, 0.335693359375, 0.229150390625, 0.21328125, 0.1865234375, 0.1017578125, 0.11865234375, 0.037158203125, 0.007421875, 0.021044921875, 0.059521484375, 0.07470703125, 0.04296875, 0.06474609375]

linea1r2x2_1024_4 = [0.4918203125, 0.4842265625, 0.4633046875, 0.42453125, 0.3955390625, 0.3448828125, 0.2990234375, 0.234, 0.198328125, 0.208359375, 0.19259375, 0.1688671875, 0.1256484375, 0.14490625, 0.139546875, 0.146859375, 0.121359375, 0.1755625, 0.13065625, 0.141515625, 0.1420703125]

#[0.4458984375, 0.3707861328125, 0.3760986328125, 0.3507177734375, 0.2819921875, 0.1987451171875, 0.132392578125, 0.148046875, 0.047900390625, 0.0508544921875, 0.0308154296875, 0.00181640625, 0.0114306640625, 0.0279638671875, 0.0577734375, 0.02244140625, 0.02150390625, 0.006669921875, 0.020556640625, 0.0333837890625, 0.0170263671875] #[0.443408203125, 0.37197265625, 0.373486328125, 0.3427734375, 0.28408203125, 0.209521484375, 0.152001953125, 0.111376953125, 0.0791015625, 0.03408203125, 0.070751953125, 0.00849609375, 0.043017578125, 0.021044921875, 0.02880859375, 0.02412109375]

linea2r2x2_1024_4 = [0.4906796875, 0.4820703125, 0.458625, 0.440984375, 0.400296875, 0.37496875, 0.3511875, 0.306046875, 0.2897734375, 0.282390625, 0.28921875, 0.2852734375, 0.25828125, 0.255703125, 0.2377890625, 0.2394921875, 0.2476875, 0.25359375, 0.2494609375, 0.2451015625, 0.2491796875]

#[0.43037109375, 0.40283203125, 0.398193359375, 0.312255859375, 0.300048828125, 0.1994140625, 0.18271484375, 0.149951171875, 0.118212890625, 0.087744140625, 0.053125, 0.020703125, 0.03603515625, 0.0017578125, 0.045458984375, 0.037841796875]

epa2x2_1024_4 = [0.4833203125, 0.489404296875, 0.4622705078125, 0.4171630859375, 0.4118017578125, 0.3623681640625, 0.346494140625, 0.2839111328125, 0.2419189453125, 0.1816162109375, 0.157978515625, 0.1392822265625, 0.16501953125, 0.149716796875, 0.211376953125, 0.119833984375, 0.1521875, 0.0921142578125, 0.1552734375, 0.1702734375, 0.116689453125] #[0.446240234375, 0.416748046875, 0.40009765625, 0.35048828125, 0.35986328125, 0.265771484375, 0.208740234375, 0.169921875, 0.114892578125, 0.10341796875, 0.046044921875, 0.0296875, 0.0388671875, 0.057080078125, 0.04384765625, 0.016259765625]



# BER is measured for the following SNRs.
steps = np.arange(0, 42, 2)

# Plot the results in a BER over SNR plot.
plt.figure(1)

plt.plot(steps, flat2x2_1024_4, 'r-<', label='Flat fading')
plt.plot(steps, unifrom2x2_1024_4, 'b-<', label='Rayleigh, P=3')
plt.plot(steps, linea1r2x2_1024_4, 'g-<', label='Rayleigh, long linear CIR')
#plt.plot(steps, linea2r2x2_1024_4, 'm-<', label='Rayleigh, long linear CIR')
plt.plot(steps, epa2x2_1024_4, 'k-<', label='LTE, EPA')
plt.axis([0, 40, 0.00001, 1])
plt.xlabel('SNR / dB')
plt.yscale('log')
plt.grid()
plt.legend()

plt.show()

#from matplotlib2tikz import save as tikz_save
#tikz_save('../master-thesis/figures/custom_flat.tex', figureheight='9.5cm', figurewidth='15cm');
